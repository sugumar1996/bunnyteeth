{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bitcot/Desktop/my-repo/bunnyteeth/thebunnyteeth/src/App.js\";\n\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport AppRouter from './router/router';\nimport { useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport { removeConsoleLog } from 'utility/utility';\nimport './styles/custom.css';\n\nvar App = function App(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.authReducer;\n  }),\n      user = _useSelector.user;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.authReducer;\n  }),\n      token = _useSelector2.token;\n\n  var willMount = useRef(true);\n\n  if (willMount.current) {\n    if (process.env.REACT_APP_ENV === 'production') {\n      console.log(\"production if\");\n      removeConsoleLog();\n    }\n\n    willMount.current = false;\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactNotification, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppRouter, {\n    user: user,\n    token: token,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/bitcot/Desktop/my-repo/bunnyteeth/thebunnyteeth/src/App.js"],"names":["React","BrowserRouter","Router","ReactNotification","AppRouter","useSelector","useRef","removeConsoleLog","App","props","state","authReducer","user","token","willMount","current","process","env","REACT_APP_ENV","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAO,8CAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAO,qBAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,qBAAiBJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAAN,CAA5B;AAAA,MAAQC,IAAR,gBAAQA,IAAR;;AACA,sBAAkBP,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAAN,CAA7B;AAAA,MAAQE,KAAR,iBAAQA,KAAR;;AACA,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;;AAEA,MAAIQ,SAAS,CAACC,OAAd,EAAuB;AACrB,QAAIC,OAAO,CAACC,GAAR,CAAYC,aAAZ,KAA8B,YAAlC,EAAgD;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAb,MAAAA,gBAAgB;AACjB;;AACDO,IAAAA,SAAS,CAACC,OAAV,GAAoB,KAApB;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEH,IAAjB;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnBD;;AAqBA,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport AppRouter from './router/router'\nimport { useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport { removeConsoleLog } from 'utility/utility';\nimport './styles/custom.css';\n\nconst App = (props) => {\n  const { user } = useSelector(state => state.authReducer);\n  const { token } = useSelector(state => state.authReducer);\n  const willMount = useRef(true)\n\n  if (willMount.current) {\n    if (process.env.REACT_APP_ENV === 'production') {\n      console.log(\"production if\");\n      removeConsoleLog()\n    }\n    willMount.current = false\n  }\n\n  return (\n    <Router>\n      <ReactNotification />\n      <AppRouter user={user} token={token} />\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}