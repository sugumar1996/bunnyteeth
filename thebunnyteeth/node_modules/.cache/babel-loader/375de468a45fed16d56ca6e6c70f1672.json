{"ast":null,"code":"import { add, check } from './types';\nvar id = 0;\n\nvar identity = function identity(arg) {\n  return arg;\n};\n\nvar normalize = function normalize(dispatchOrStore) {\n  if (dispatchOrStore && typeof dispatchOrStore.dispatch === 'function') {\n    return dispatchOrStore.dispatch;\n  } else {\n    return dispatchOrStore;\n  }\n};\n\nvar normalizeAll = function normalizeAll(dispatchOrStores) {\n  if (Array.isArray(dispatchOrStores)) {\n    return dispatchOrStores.map(normalize);\n  } else {\n    return normalize(dispatchOrStores);\n  }\n};\n\nexport default function createAction(description, payloadReducer, metaReducer) {\n  if (typeof description === 'function') {\n    metaReducer = payloadReducer;\n    payloadReducer = description;\n    description = undefined;\n  }\n\n  if (typeof payloadReducer !== 'function') {\n    payloadReducer = identity;\n  }\n\n  if (typeof metaReducer !== 'function') {\n    metaReducer = undefined;\n  }\n\n  var isSerializable = typeof description === 'string' && /^[0-9A-Z_]+$/.test(description);\n\n  if (isSerializable) {\n    check(description);\n    add(description);\n  } else {\n    ++id;\n  }\n\n  var type = isSerializable ? description : \"[\".concat(id, \"]\").concat(description ? ' ' + description : '');\n  var dispatchFunctions = undefined;\n\n  function makeAction() {\n    var payload = payloadReducer.apply(void 0, arguments);\n\n    if (metaReducer) {\n      return {\n        type: type,\n        payload: payload,\n        error: payload instanceof Error,\n        meta: metaReducer.apply(void 0, arguments)\n      };\n    }\n\n    return {\n      type: type,\n      payload: payload,\n      error: payload instanceof Error\n    };\n  }\n\n  var makeAndDispatch = function makeAndDispatch(dispatchs, isError) {\n    return function () {\n      var payloadedAction = makeAction.apply(void 0, arguments);\n\n      if (!payloadedAction.error) {\n        payloadedAction.error = isError;\n      }\n\n      if (Array.isArray(dispatchs)) {\n        return dispatchs.map(function (dispatch) {\n          return dispatch(payloadedAction);\n        });\n      } else if (dispatchs) {\n        return dispatchs(payloadedAction);\n      } else {\n        return payloadedAction;\n      }\n    };\n  };\n\n  function actionCreator() {\n    return makeAndDispatch(dispatchFunctions, false).apply(void 0, arguments);\n  }\n\n  actionCreator.asError = function () {\n    return makeAndDispatch(dispatchFunctions, true).apply(void 0, arguments);\n  };\n\n  actionCreator.getType = function () {\n    return type;\n  };\n\n  actionCreator.toString = function () {\n    return type;\n  };\n\n  actionCreator.raw = makeAction;\n\n  actionCreator.assignTo = function (dispatchOrStores) {\n    dispatchFunctions = normalizeAll(dispatchOrStores);\n    return actionCreator;\n  };\n\n  actionCreator.assigned = function () {\n    return !!dispatchFunctions;\n  };\n\n  actionCreator.bound = function () {\n    return false;\n  };\n\n  actionCreator.dispatched = actionCreator.assigned;\n\n  actionCreator.bindTo = function (dispatchOrStores) {\n    var boundActionCreator = makeAndDispatch(normalizeAll(dispatchOrStores, false));\n    boundActionCreator.asError = makeAndDispatch(normalizeAll(dispatchOrStores, true));\n    boundActionCreator.raw = makeAction;\n    boundActionCreator.getType = actionCreator.getType;\n    boundActionCreator.toString = actionCreator.toString;\n\n    boundActionCreator.assignTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.bindTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.assigned = function () {\n      return false;\n    };\n\n    boundActionCreator.bound = function () {\n      return true;\n    };\n\n    boundActionCreator.dispatched = boundActionCreator.bound;\n    return boundActionCreator;\n  };\n\n  return actionCreator;\n}\n;","map":{"version":3,"sources":["/home/bitcot/Desktop/my-repo/bunnyteeth/thebunnyteeth/node_modules/redux-act/esm/createAction.js"],"names":["add","check","id","identity","arg","normalize","dispatchOrStore","dispatch","normalizeAll","dispatchOrStores","Array","isArray","map","createAction","description","payloadReducer","metaReducer","undefined","isSerializable","test","type","concat","dispatchFunctions","makeAction","payload","apply","arguments","error","Error","meta","makeAndDispatch","dispatchs","isError","payloadedAction","actionCreator","asError","getType","toString","raw","assignTo","assigned","bound","dispatched","bindTo","boundActionCreator"],"mappings":"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","sourcesContent":["import { add, check } from './types';\nvar id = 0;\n\nvar identity = function identity(arg) {\n  return arg;\n};\n\nvar normalize = function normalize(dispatchOrStore) {\n  if (dispatchOrStore && typeof dispatchOrStore.dispatch === 'function') {\n    return dispatchOrStore.dispatch;\n  } else {\n    return dispatchOrStore;\n  }\n};\n\nvar normalizeAll = function normalizeAll(dispatchOrStores) {\n  if (Array.isArray(dispatchOrStores)) {\n    return dispatchOrStores.map(normalize);\n  } else {\n    return normalize(dispatchOrStores);\n  }\n};\n\nexport default function createAction(description, payloadReducer, metaReducer) {\n  if (typeof description === 'function') {\n    metaReducer = payloadReducer;\n    payloadReducer = description;\n    description = undefined;\n  }\n\n  if (typeof payloadReducer !== 'function') {\n    payloadReducer = identity;\n  }\n\n  if (typeof metaReducer !== 'function') {\n    metaReducer = undefined;\n  }\n\n  var isSerializable = typeof description === 'string' && /^[0-9A-Z_]+$/.test(description);\n\n  if (isSerializable) {\n    check(description);\n    add(description);\n  } else {\n    ++id;\n  }\n\n  var type = isSerializable ? description : \"[\".concat(id, \"]\").concat(description ? ' ' + description : '');\n  var dispatchFunctions = undefined;\n\n  function makeAction() {\n    var payload = payloadReducer.apply(void 0, arguments);\n\n    if (metaReducer) {\n      return {\n        type: type,\n        payload: payload,\n        error: payload instanceof Error,\n        meta: metaReducer.apply(void 0, arguments)\n      };\n    }\n\n    return {\n      type: type,\n      payload: payload,\n      error: payload instanceof Error\n    };\n  }\n\n  var makeAndDispatch = function makeAndDispatch(dispatchs, isError) {\n    return function () {\n      var payloadedAction = makeAction.apply(void 0, arguments);\n\n      if (!payloadedAction.error) {\n        payloadedAction.error = isError;\n      }\n\n      if (Array.isArray(dispatchs)) {\n        return dispatchs.map(function (dispatch) {\n          return dispatch(payloadedAction);\n        });\n      } else if (dispatchs) {\n        return dispatchs(payloadedAction);\n      } else {\n        return payloadedAction;\n      }\n    };\n  };\n\n  function actionCreator() {\n    return makeAndDispatch(dispatchFunctions, false).apply(void 0, arguments);\n  }\n\n  actionCreator.asError = function () {\n    return makeAndDispatch(dispatchFunctions, true).apply(void 0, arguments);\n  };\n\n  actionCreator.getType = function () {\n    return type;\n  };\n\n  actionCreator.toString = function () {\n    return type;\n  };\n\n  actionCreator.raw = makeAction;\n\n  actionCreator.assignTo = function (dispatchOrStores) {\n    dispatchFunctions = normalizeAll(dispatchOrStores);\n    return actionCreator;\n  };\n\n  actionCreator.assigned = function () {\n    return !!dispatchFunctions;\n  };\n\n  actionCreator.bound = function () {\n    return false;\n  };\n\n  actionCreator.dispatched = actionCreator.assigned;\n\n  actionCreator.bindTo = function (dispatchOrStores) {\n    var boundActionCreator = makeAndDispatch(normalizeAll(dispatchOrStores, false));\n    boundActionCreator.asError = makeAndDispatch(normalizeAll(dispatchOrStores, true));\n    boundActionCreator.raw = makeAction;\n    boundActionCreator.getType = actionCreator.getType;\n    boundActionCreator.toString = actionCreator.toString;\n\n    boundActionCreator.assignTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.bindTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.assigned = function () {\n      return false;\n    };\n\n    boundActionCreator.bound = function () {\n      return true;\n    };\n\n    boundActionCreator.dispatched = boundActionCreator.bound;\n    return boundActionCreator;\n  };\n\n  return actionCreator;\n}\n;"]},"metadata":{},"sourceType":"module"}