{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport batch from './batch';\nexport default function disbatch(store) {\n  for (var _len = arguments.length, actions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    actions[_key - 1] = arguments[_key];\n  }\n\n  if (actions && actions.length > 0) {\n    if (!store || typeof store !== 'function' && typeof store.dispatch !== 'function') {\n      throw new TypeError('disbatch must take either a valid Redux store or a dispatch function as first parameter');\n    }\n\n    if (typeof store.dispatch === 'function') {\n      store = store.dispatch;\n    } // store is actually the dispatch function here\n\n\n    return store(batch.apply(void 0, actions));\n  } else {\n    if (!store || typeof store.dispatch !== 'function') {\n      throw new TypeError('disbatch must take a valid Redux store with a dispatch function as first parameter');\n    }\n\n    return _extends(store, {\n      disbatch: disbatch.bind(undefined, store)\n    });\n  }\n}","map":{"version":3,"sources":["/home/bitcot/Desktop/my-repo/bunnyteeth/thebunnyteeth/node_modules/redux-act/esm/disbatch.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","batch","disbatch","store","_len","actions","Array","_key","dispatch","TypeError","bind","undefined"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,MAAkB,SAAlB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,OAAK,IAAIC,IAAI,GAAGX,SAAS,CAACC,MAArB,EAA6BW,OAAO,GAAG,IAAIC,KAAJ,CAAUF,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAvC,EAA2EG,IAAI,GAAG,CAAvF,EAA0FA,IAAI,GAAGH,IAAjG,EAAuGG,IAAI,EAA3G,EAA+G;AAC7GF,IAAAA,OAAO,CAACE,IAAI,GAAG,CAAR,CAAP,GAAoBd,SAAS,CAACc,IAAD,CAA7B;AACD;;AAED,MAAIF,OAAO,IAAIA,OAAO,CAACX,MAAR,GAAiB,CAAhC,EAAmC;AACjC,QAAI,CAACS,KAAD,IAAU,OAAOA,KAAP,KAAiB,UAAjB,IAA+B,OAAOA,KAAK,CAACK,QAAb,KAA0B,UAAvE,EAAmF;AACjF,YAAM,IAAIC,SAAJ,CAAc,yFAAd,CAAN;AACD;;AAED,QAAI,OAAON,KAAK,CAACK,QAAb,KAA0B,UAA9B,EAA0C;AACxCL,MAAAA,KAAK,GAAGA,KAAK,CAACK,QAAd;AACD,KAPgC,CAO/B;;;AAGF,WAAOL,KAAK,CAACF,KAAK,CAACD,KAAN,CAAY,KAAK,CAAjB,EAAoBK,OAApB,CAAD,CAAZ;AACD,GAXD,MAWO;AACL,QAAI,CAACF,KAAD,IAAU,OAAOA,KAAK,CAACK,QAAb,KAA0B,UAAxC,EAAoD;AAClD,YAAM,IAAIC,SAAJ,CAAc,oFAAd,CAAN;AACD;;AAED,WAAOrB,QAAQ,CAACe,KAAD,EAAQ;AACrBD,MAAAA,QAAQ,EAAEA,QAAQ,CAACQ,IAAT,CAAcC,SAAd,EAAyBR,KAAzB;AADW,KAAR,CAAf;AAGD;AACF","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport batch from './batch';\nexport default function disbatch(store) {\n  for (var _len = arguments.length, actions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    actions[_key - 1] = arguments[_key];\n  }\n\n  if (actions && actions.length > 0) {\n    if (!store || typeof store !== 'function' && typeof store.dispatch !== 'function') {\n      throw new TypeError('disbatch must take either a valid Redux store or a dispatch function as first parameter');\n    }\n\n    if (typeof store.dispatch === 'function') {\n      store = store.dispatch;\n    } // store is actually the dispatch function here\n\n\n    return store(batch.apply(void 0, actions));\n  } else {\n    if (!store || typeof store.dispatch !== 'function') {\n      throw new TypeError('disbatch must take a valid Redux store with a dispatch function as first parameter');\n    }\n\n    return _extends(store, {\n      disbatch: disbatch.bind(undefined, store)\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}